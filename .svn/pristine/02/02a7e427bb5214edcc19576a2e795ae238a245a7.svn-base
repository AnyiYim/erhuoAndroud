package com.example.anyi.bomb;

import android.content.Intent;
import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

import cn.bmob.v3.BmobUser;
import cn.bmob.v3.exception.BmobException;
import cn.bmob.v3.listener.SaveListener;


public class CreateUser extends AppCompatActivity {

    private Button bt;

    private EditText E_stu_num;
    private EditText E_psw;
    private EditText E_Rpsw;
    private EditText E_tel;

    public static String stu_num;
    public static String psw;
    public static String Rpsw;
    public static String tel;
/*

    private ProgressDialog pDialog;

    private static String url_create_user = "http://192.168.43.4/android_connect2/create_user.php";

    private static final String TAG_SUCCESS = "success";

    JSONParser jsonParser = new JSONParser();

*/

    @Override
    protected void onCreate(final Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_create_user);

        E_stu_num = (EditText) findViewById(R.id.stu_num);
        E_psw = (EditText) findViewById(R.id.psw);
        E_tel = (EditText) findViewById(R.id.tel);
        E_Rpsw = (EditText) findViewById(R.id.Rpsw);


        bt = (Button) findViewById(R.id.Bt_1);




        bt.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {

                stu_num = E_stu_num.getText().toString();
                psw = E_psw.getText().toString();
                Rpsw = E_Rpsw.getText().toString();
                tel = E_tel.getText().toString();

                if (psw.equals(Rpsw)) {
                    //creating new user in background thread
                   /* new CreateNewUser(stu_num, psw, tel).execute();*/
                    BmobUser nb = new BmobUser();
                    nb.setUsername(stu_num);
                    nb.setPassword(psw);
                    nb.setMobilePhoneNumber(tel);

                    nb.signUp(new SaveListener<BmobUser>() {
                        @Override
                        public void done(BmobUser s, BmobException e) {
                            if (e == null){
                                Toast.makeText(getApplicationContext(),"创建用户成功！",Toast.LENGTH_SHORT).show();
                                startActivity(new Intent(CreateUser.this, Login.class));
                                finish();
                            }
                            else {
                                Toast.makeText(getApplicationContext(),"创建用户失败，请重新创建!"+e.getMessage(),Toast.LENGTH_SHORT).show();
                                startActivity(new Intent(CreateUser.this, CreateUser.class));
                                finish();
                            }
                        }
                    });
/*
                    user.save(new SaveListener<String>() {
                        @Override
                        public void done(String s, BmobException e) {
                            if (e == null){
                                Toast.makeText(getApplicationContext(),"创建用户成功！",Toast.LENGTH_SHORT).show();
                                startActivity(new Intent(CreateUser.this, Login.class));
                            }
                            else {
                                Toast.makeText(getApplicationContext(),"创建用户失败，请重新创建!"+e.getMessage(),Toast.LENGTH_SHORT).show();
                                startActivity(new Intent(CreateUser.this, CreateUser.class));

                            }
                        }
                    });*/

                }
                else {

                    Intent i = new Intent(CreateUser.this, CreateUser.class);
                    Toast.makeText(getApplication(),"两次密码输入不一致，清除重新输入！",Toast.LENGTH_SHORT).show();
                    startActivity(i);
                    finish();

                }


            }
        });


    }


   /* class CreateNewUser extends AsyncTask<String, String, String> {

        *//**
         * Before starting background thread Show Progress Dialog
         *
         * *//*
        String stunum, password, telnum;

        public CreateNewUser(String stu_num, String psw, String tel) {
            stunum = stu_num;
            password = psw;
            telnum = tel;

        }


        @Override




        protected void onPreExecute() {
            super.onPreExecute();
            pDialog = new ProgressDialog(CreateUser.this);
            pDialog.setMessage("Creating Product..");
            pDialog.setIndeterminate(false);
            pDialog.setCancelable(true);
            pDialog.show();
        }


        *//**
         * Creating user
         * *//*

        protected String doInBackground(String... strings) {


            new Thread(new Runnable() {
                @Override
                public void run() {
                    try {
                        URL url = new URL(url_create_user);
                        HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection();
                        // 设置请求方式
                        httpURLConnection.setRequestMethod("POST");
                        // 设置是否向httpUrlConnection输出，因为这个是POST请求，参数要放在
                        // http正文内，因此需要设为true，默认情况下是false；
                        httpURLConnection.setDoOutput(true);
                        // 设置是否从httpUrlConnection读入，默认情况下是true；
                        httpURLConnection.setDoInput(true);
                        // 设置POST请求不使用缓存
                        httpURLConnection.setUseCaches(false);
                        // 设置请求的超时时间
                        httpURLConnection.setReadTimeout(5000);
                        httpURLConnection.setConnectTimeout(5000);
                        // 设定传达的内容类型是可序列化的Java对象
                        httpURLConnection.setRequestProperty("Content-type","application/json;charset=utf-8");
                        httpURLConnection.connect();

                        // POST请求

                        int responseCode = httpURLConnection.getResponseCode();
                        if (responseCode == 200) {
                            OutputStream out = httpURLConnection.getOutputStream();
                            JSONObject obj = new JSONObject();
                            obj.put("user_number",stunum);
                            obj.put("user_password",password);
                            obj.put("user_phone",telnum);
                            Log.v("TAG",obj.toString());
                            out.write(obj.toString().getBytes());
                            out.flush();
                            out.close();

                            //读取响应
                            BufferedReader reader = new BufferedReader(new InputStreamReader(httpURLConnection.getInputStream()));
                            String lines;
                            StringBuilder sb = new StringBuilder("");
                            while ((lines = reader.readLine()) != null) {
                                lines = new String(lines.getBytes(),"utf-8");
                                sb.append(lines);
                            }
                            Log.v("TAG",sb.toString());
                            reader.close();
                            //断开连接
                            httpURLConnection.disconnect();

                        }
                        else {
                            Log.v("TAG","访问失败：" + responseCode);
                        }





                    } catch (java.io.IOException e) {
                        e.printStackTrace();
                    } catch (JSONException e) {
                        e.printStackTrace();
                    }
                }
            }).start();





*//*


            // Building Parameters
            List<NameValuePair> params = new ArrayList<NameValuePair>();
            params.add(new BasicNameValuePair("stu_num", stunum));
            params.add(new BasicNameValuePair("psw", password));
            params.add(new BasicNameValuePair("tel", telnum));

            Log.d("request!", "starting");

            // getting JSON Object
            // Note that create user url accept POST method
            JSONObject json = jsonParser.makeHttpRequest(url_create_user, "POST", params);


            // check log cat fro response
            Log.d("Create Response", json.toString());

            // check for success tag
            try {
                int success = json.getInt(TAG_SUCCESS);

                if (success == 1) {
                    // successfully created user
                    Intent i = new Intent(getApplicationContext(), Login.class);
                    startActivity(i);

                    finish();


                }
                else {

                }



            } catch (JSONException e) {
                e.printStackTrace();
            }*//*
            return null;


        }

        protected void onPostExecute(String file_url) {

        }

    }*/
}
